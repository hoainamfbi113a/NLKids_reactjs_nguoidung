{"ast":null,"code":"// import React, { Component } from 'react'\n// import  { Redirect } from 'react-router-dom'\n// import axios from 'axios';\n// import QuestionItem from './QuestionItem'\n// import jwt_decode from 'jwt-decode'\n// import Countdown from 'react-countdown-now';\n// import Swal from 'sweetalert-react';\n// import 'sweetalert/dist/sweetalert.css';\n// // Renderer callback with condition\n// class Question extends Component {\n//   constructor() {//Ham khoi tao\n//     super()\n//     this.state = {\n//           date: Date.now() + 600000,\n//           showAlert:false,\n//           ans0: '',\n//           ans1:'',\n//           ans2 : '',\n//           ans3 : '',\n//           ans4: '',\n//           ans5:'',\n//           ans6 : '',\n//           ans7 : '',\n//           ans8: '',\n//           ans9:'',\n//           memberid:'',\n//           iddethi:'',\n//           diem:'',\n//           dapan:[],\n//           persons:[]\n//     }\n//     this.onSubmit = this.onSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n//   onChange(e) {\n//     this.setState({ [e.target.name]: e.target.value })//cập nhật giá trị input\n//   }\n//   onSubmit(e) {\n//     var r = this;\n//     e.preventDefault();\n//     axios.post('http://localhost:5000/client/dethi', {\n//         _id:this.state._id,\n//         ans0: this.state.ans0,\n//         ans1: this.state.ans1,\n//         ans2: this.state.ans2,\n//         ans3: this.state.ans3,\n//         ans4: this.state.ans4,\n//         ans5: this.state.ans5,\n//         ans6: this.state.ans6,\n//         ans7: this.state.ans7,\n//         ans8: this.state.ans8,\n//         ans9: this.state.ans9,\n//         iddethi:this.state.iddethi,\n//         memberid:this.state.memberid\n//       })\n//       .then(function (response) {\n//         if(response.data ==='User already exists')\n//           alert('User already exists');\n//         else{\n//           alert(response.data+' điểm');\n//           <Redirect to='/'  />\n//           r.props.history.push('/')\n//         }\n//       })\n//       .catch(function (error) {\n//         console.log(error);\n//       });\n//       r.props.history.push('/')\n//   }\n//   componentDidMount(){\n//     // this.setState({iddethi:window.location.href.slice(35)});\n//     this.setState({iddethi:this.props.match.params.id});\n//     const token = localStorage.usertoken\n//     const decoded = jwt_decode(token)//giai ma token\n//     console.log(decoded)\n//     this.setState({\n//       // first_name: decoded.first_name,\n//       memberid: decoded.memberLogin\n//     })\n//     axios.get('http://localhost:5000/admin/question/list/'+this.props.match.params.id)\n//         .then(response => {\n//             this.setState({persons: response.data});\n//             // console.log(response.data['questionResultD']);\n//         })\n//         .catch(function (error) {\n//             // console.log(error);\n//         })\n//   }\n//       renderItem = () =>{   \n//         let {items,idEdit,nameEdit,levelEdit,persons} = this.state; \n//         return (\n//           persons.map((item,index)=>{\n//             return(   \n//               <div className=\"test\">\n//                   <div className=\"socau\">\n//                     <span className=\"num\">Câu {index+1}:</span>\n//                   </div>\n//                   <div className=\"question\">\n//                     <div className=\"question-text\">\n//                       <h5>{item.questionName}</h5>\n//                     </div>\n//                     <div className=\"question-images\">\n//                       <img src=\"../img/images/banner1.jpg\" />\n//                       <input type=\"hidden\" className=\"form-control\" id=\"inputPassword3\" \n//                       placeholder=\"Số câu dễ\"  name=\"dapan2\" value=\"aaaaaaaaaaaaaaaa\"/>\n//                     </div>\n//                   </div>\n//                   <div className=\"answer\">\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"A\" /><span>{item.questionResultA}</span>\n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"B\" /><span>{item.questionResultB}</span> \n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"C\" /><span>{item.questionResultC}</span>\n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"D\" /><span>{item.questionResultD}</span>\n//                     </div>\n//                   </div>\n//                     <Swal\n//                             show={this.state.showAlert}\n//                             title=\"Điểm của bạn là\"\n//                             text= {this.state.diem}\n//                             onOutsideClick={()  => this.setState({ showAlert: false })}\n//                             onEscapeKey={()     => this.setState({ showAlert: false })}\n//                             onConfirm={() => this.setState({ showAlert: false })}\n//                 />\n//                 </div>\n//              )\n//           })\n//         )\n//       }\n//   render() {\n//     const renderer = ({hours, minutes, seconds, completed }) => {\n//       if (completed) {\n//         this.inputElement.click();\n//       } else {\n//         // Render a countdown\n//         return <span>{hours}:{minutes}:{seconds}</span>;\n//       }\n//     };\n//     return (\n//             <div>\n//               <meta charSet=\"UTF-8\" />\n//               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//               <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n//               <title>Document</title>\n//               <style dangerouslySetInnerHTML={{__html: \"\\n\\n*{\\n    margin: 0;\\n    padding:0;\\n    box-sizing: border-box;\\n}\\nbutton,form,input{\\n    box-sizing: border-box;\\n}\\nbody{\\n    background: #f0f0f0;\\n    font-family:Helvetica, sans-serif\\n}\\na{\\n    text-decoration: none;\\n}\\n.web-content{\\n    display: grid;\\n    grid-gap: 10px;\\n}\\nheader{\\n    height:55px;\\n    background: rgb(218, 216, 216);\\n    display: grid;\\n}\\n.header-content{\\n    width: 90%;\\n    margin: auto;\\n    display: grid;\\n    grid-template-columns: 20% 60% 20%;\\n}\\n.content{\\n    z-index: 1;\\n    background: #f0f0f0;\\n    width: 90%;\\n    margin: 0 auto;\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    grid-template-rows: 60px 60px 1540px 50px;\\n    grid-template-areas:'menu menu menu'\\n                        'aside-tree aside-tree aside-tree'\\n                        'aside-main aside-main aside-main'\\n                        'aside-fb aside-youtube aside-youtube';\\n    grid-gap:10px;\\n    overflow: hidden;\\n}\\n.menu{\\n    grid-area: menu;\\n    background: rgb(144, 144, 245);\\n}\\n.aside-tree{\\n    grid-area: aside-tree;\\n    background: rgb(136, 188, 248);\\n}\\n.aside-main{\\n    grid-area: aside-main;\\n    background: rgb(191, 226, 247);\\n    display: grid;\\n    grid-auto-rows: repeat(5,1fr);\\n    z-index: 2;\\n    grid-gap: 10px;\\n}\\n.socau{\\n    background: turquoise;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 40px;\\n    width: 90px;\\n    padding: 5px 10px;\\n}\\n.socau.num{\\n    font-size: 20px;\\n    width: 90;\\n    vertical-align: top;\\n}\\n.test{\\n    \\n    margin-bottom: 15px;\\n    padding: 20px 0 0;\\n}\\n.test .question{\\n    \\n    display: flex;\\n    /* justify-content: center; */\\n    align-items: center;\\n    flex-direction: column;\\n    margin-bottom: 15px;\\n    padding: 20px 0 0;\\n}\\n.question.question-text{\\n    height: 200px;\\n    margin: 10px 10px 10px 10px;\\n    text-align: center;\\n    \\n}\\n.question.question-images{\\n    height: 600px;\\n    margin: 10px 10px 10px 10px;\\n}\\n.test .answer{\\n    height: 60px;\\n    display: flex;\\n    margin: 10px 10px 10px 10px;\\n}\\n.answer .answer-item{\\n    height: 60px;\\n    margin: 0 auto;\\n    text-align: center;\\n}\\n\\n \\n\\t\" }} />\n//       <aside className=\"aside-main\">\n//       <Countdown\n//               date={this.state.date} \n//               renderer={renderer}\n//                />   \n//       <form  onSubmit={this.onSubmit}>\n//       {this.renderItem()}\n//       {/* <input type=\"submit\" class=\"btn btn-primary\" value=\"Nộp bài\"/> */}\n//       <input ref={input => this.inputElement = input} style={{background: '#999', padding: '5px 5px', marginLeft: '650px'}} type=\"submit\" name=\"\" value=\"Nộp bài\" ref={input => this.inputElement = input}/>\n//       </form>\n//       </aside>\n//       </div>\n//     )\n//   }\n// }\n// export default Question","map":{"version":3,"sources":["/Users/nguyenhoainam/Desktop/Khoa luan tot nghiep/NLKids_reactjs_nguoidung/src/components/client/question/Question.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react'\n// import  { Redirect } from 'react-router-dom'\n// import axios from 'axios';\n// import QuestionItem from './QuestionItem'\n// import jwt_decode from 'jwt-decode'\n// import Countdown from 'react-countdown-now';\n// import Swal from 'sweetalert-react';\n// import 'sweetalert/dist/sweetalert.css';\n\n\n// // Renderer callback with condition\n\n// class Question extends Component {\n//   constructor() {//Ham khoi tao\n//     super()\n//     this.state = {\n//           date: Date.now() + 600000,\n//           showAlert:false,\n//           ans0: '',\n//           ans1:'',\n//           ans2 : '',\n//           ans3 : '',\n//           ans4: '',\n//           ans5:'',\n//           ans6 : '',\n//           ans7 : '',\n//           ans8: '',\n//           ans9:'',\n//           memberid:'',\n//           iddethi:'',\n//           diem:'',\n//           dapan:[],\n//           persons:[]\n//     }\n//     this.onSubmit = this.onSubmit.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//   }\n  \n//   onChange(e) {\n//     this.setState({ [e.target.name]: e.target.value })//cập nhật giá trị input\n   \n//   }\n//   onSubmit(e) {\n//     var r = this;\n//     e.preventDefault();\n//     axios.post('http://localhost:5000/client/dethi', {\n//         _id:this.state._id,\n//         ans0: this.state.ans0,\n//         ans1: this.state.ans1,\n//         ans2: this.state.ans2,\n//         ans3: this.state.ans3,\n//         ans4: this.state.ans4,\n//         ans5: this.state.ans5,\n//         ans6: this.state.ans6,\n//         ans7: this.state.ans7,\n//         ans8: this.state.ans8,\n//         ans9: this.state.ans9,\n//         iddethi:this.state.iddethi,\n//         memberid:this.state.memberid\n//       })\n//       .then(function (response) {\n//         if(response.data ==='User already exists')\n//           alert('User already exists');\n//         else{\n//           alert(response.data+' điểm');\n//           <Redirect to='/'  />\n//           r.props.history.push('/')\n//         }\n//       })\n//       .catch(function (error) {\n//         console.log(error);\n//       });\n//       r.props.history.push('/')\n//   }\n//   componentDidMount(){\n//     // this.setState({iddethi:window.location.href.slice(35)});\n//     this.setState({iddethi:this.props.match.params.id});\n//     const token = localStorage.usertoken\n//     const decoded = jwt_decode(token)//giai ma token\n//     console.log(decoded)\n//     this.setState({\n//       // first_name: decoded.first_name,\n//       memberid: decoded.memberLogin\n//     })\n//     axios.get('http://localhost:5000/admin/question/list/'+this.props.match.params.id)\n//         .then(response => {\n//             this.setState({persons: response.data});\n//             // console.log(response.data['questionResultD']);\n//         })\n//         .catch(function (error) {\n//             // console.log(error);\n//         })\n//   }\n//       renderItem = () =>{   \n        \n//         let {items,idEdit,nameEdit,levelEdit,persons} = this.state; \n//         return (\n//           persons.map((item,index)=>{\n//             return(   \n                 \n//               <div className=\"test\">\n                \n//                   <div className=\"socau\">\n//                     <span className=\"num\">Câu {index+1}:</span>\n//                   </div>\n//                   <div className=\"question\">\n//                     <div className=\"question-text\">\n//                       <h5>{item.questionName}</h5>\n//                     </div>\n//                     <div className=\"question-images\">\n//                       <img src=\"../img/images/banner1.jpg\" />\n//                       <input type=\"hidden\" className=\"form-control\" id=\"inputPassword3\" \n//                       placeholder=\"Số câu dễ\"  name=\"dapan2\" value=\"aaaaaaaaaaaaaaaa\"/>\n//                     </div>\n                    \n//                   </div>\n//                   <div className=\"answer\">\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"A\" /><span>{item.questionResultA}</span>\n                      \n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"B\" /><span>{item.questionResultB}</span> \n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"C\" /><span>{item.questionResultC}</span>\n//                     </div>\n//                     <div className=\"answer-item\">\n//                       <input type=\"radio\" name={\"ans\"+index} onChange={this.onChange} value=\"D\" /><span>{item.questionResultD}</span>\n//                     </div>\n//                   </div>\n//                     <Swal\n//                             show={this.state.showAlert}\n//                             title=\"Điểm của bạn là\"\n//                             text= {this.state.diem}\n//                             onOutsideClick={()  => this.setState({ showAlert: false })}\n//                             onEscapeKey={()     => this.setState({ showAlert: false })}\n//                             onConfirm={() => this.setState({ showAlert: false })}\n//                 />\n//                 </div>\n//              )\n//           })\n//         )\n//       }\n//   render() {\n//     const renderer = ({hours, minutes, seconds, completed }) => {\n//       if (completed) {\n//         this.inputElement.click();\n//       } else {\n//         // Render a countdown\n//         return <span>{hours}:{minutes}:{seconds}</span>;\n//       }\n//     };\n//     return (\n    \n//             <div>\n//               <meta charSet=\"UTF-8\" />\n//               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n//               <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n//               <title>Document</title>\n//               <style dangerouslySetInnerHTML={{__html: \"\\n\\n*{\\n    margin: 0;\\n    padding:0;\\n    box-sizing: border-box;\\n}\\nbutton,form,input{\\n    box-sizing: border-box;\\n}\\nbody{\\n    background: #f0f0f0;\\n    font-family:Helvetica, sans-serif\\n}\\na{\\n    text-decoration: none;\\n}\\n.web-content{\\n    display: grid;\\n    grid-gap: 10px;\\n}\\nheader{\\n    height:55px;\\n    background: rgb(218, 216, 216);\\n    display: grid;\\n}\\n.header-content{\\n    width: 90%;\\n    margin: auto;\\n    display: grid;\\n    grid-template-columns: 20% 60% 20%;\\n}\\n.content{\\n    z-index: 1;\\n    background: #f0f0f0;\\n    width: 90%;\\n    margin: 0 auto;\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    grid-template-rows: 60px 60px 1540px 50px;\\n    grid-template-areas:'menu menu menu'\\n                        'aside-tree aside-tree aside-tree'\\n                        'aside-main aside-main aside-main'\\n                        'aside-fb aside-youtube aside-youtube';\\n    grid-gap:10px;\\n    overflow: hidden;\\n}\\n.menu{\\n    grid-area: menu;\\n    background: rgb(144, 144, 245);\\n}\\n.aside-tree{\\n    grid-area: aside-tree;\\n    background: rgb(136, 188, 248);\\n}\\n.aside-main{\\n    grid-area: aside-main;\\n    background: rgb(191, 226, 247);\\n    display: grid;\\n    grid-auto-rows: repeat(5,1fr);\\n    z-index: 2;\\n    grid-gap: 10px;\\n}\\n.socau{\\n    background: turquoise;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 40px;\\n    width: 90px;\\n    padding: 5px 10px;\\n}\\n.socau.num{\\n    font-size: 20px;\\n    width: 90;\\n    vertical-align: top;\\n}\\n.test{\\n    \\n    margin-bottom: 15px;\\n    padding: 20px 0 0;\\n}\\n.test .question{\\n    \\n    display: flex;\\n    /* justify-content: center; */\\n    align-items: center;\\n    flex-direction: column;\\n    margin-bottom: 15px;\\n    padding: 20px 0 0;\\n}\\n.question.question-text{\\n    height: 200px;\\n    margin: 10px 10px 10px 10px;\\n    text-align: center;\\n    \\n}\\n.question.question-images{\\n    height: 600px;\\n    margin: 10px 10px 10px 10px;\\n}\\n.test .answer{\\n    height: 60px;\\n    display: flex;\\n    margin: 10px 10px 10px 10px;\\n}\\n.answer .answer-item{\\n    height: 60px;\\n    margin: 0 auto;\\n    text-align: center;\\n}\\n\\n \\n\\t\" }} />\n             \n//       <aside className=\"aside-main\">\n//       <Countdown\n//               date={this.state.date} \n//               renderer={renderer}\n//                />   \n//       <form  onSubmit={this.onSubmit}>\n//       {this.renderItem()}\n//       {/* <input type=\"submit\" class=\"btn btn-primary\" value=\"Nộp bài\"/> */}\n//       <input ref={input => this.inputElement = input} style={{background: '#999', padding: '5px 5px', marginLeft: '650px'}} type=\"submit\" name=\"\" value=\"Nộp bài\" ref={input => this.inputElement = input}/>\n//       </form>\n//       </aside>\n//       </div>\n//     )\n//   }\n// }\n\n// export default Question\n"]},"metadata":{},"sourceType":"module"}